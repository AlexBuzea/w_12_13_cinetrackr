<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>My Movies</title>

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    .search-input {
      flex: 1;
      padding: 8px;
    }

    .search-button {
      padding: 8px 12px;
    }

    .movie-item {
      text-align: center;
      margin-bottom: 20px;
    }

    .movie-item img {
      width: 200px;
      height: 300px;
      object-fit: cover;
    }

    .card {
      width: 200px;
      border: none;
    }

    .card-title {
      font-size: 1rem;
      height: 25px;
    }

    .sticky-container {
      position: sticky;
      top: 35%;
      transform: translateY(-50%);
    }

    .btn-custom {
      font-size: 0.75rem;
    }
  </style>
</head>

<body>

  <header>
    <div class="container-fluid px-0">
      <nav class="navbar navbar-expand-lg shadow-sm navbar-dark bg-dark">
        <div class="container-fluid">
          <a class="navbar-brand" href="sessions/new">
            <img src="/images/logo.png" alt="Logo" width="100" height="40" class="d-inline-block align-text-top">
          </a>
          <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
            aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>
          <a href="../profile" class="text-decoration-none">My profile</a>
          <a class="new-post-link text-decoration-none ps-4" href="/posts/new">Films</a>
          <a class="new-post-link text-decoration-none ps-4" href="/posts/new">Shows</a>
          <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="collapse navbar-collapse d-flex justify-content-end" id="navbarNavAltMarkup">
              <form action='/sessions?_method=DELETE' method='POST'>
                <input id="logout_button" type="submit" value="Log Out">
              </form>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </header>

  <div class="container-fluid">

    <div class="row">

      <!-- Search by title -->
      <div class="col-2 ">
        <div class="sticky-container">
          <form action="/movies/search" method="post">
            <div class="search-container border rounded p-4">
              <div class="form-group">
                <label for="search-input-title">Name</label>
                <input type="search" class="form-control" id="search-input-title" name="title"
                  aria-describedby="search box" placeholder="title">
              </div>
              <div class="form-group">
                <label for="search-input-genre">Genre</label>
                <input type="search" class="form-control" name="genre" id="search-input-genre" placeholder="Genre">
              </div>
            
               <label for="search-input-genre">Release Year</label>
                  <input type="search" class="form-control" id="search-input-release_date" name="release_date" placeholder="release_date">
                  
              <button type="submit" id="search-button" class="btn btn-primary">Search</button>
            </div>
          </form>
        </div>
      </div>

<!-- Popular movies -->
<div class="col-10">
  <div class="container-fluid mt-5">
    <div class="row">
      <div id="movie-latest-popular-container" class="col-md-12 d-flex flex-wrap justify-content-center">
        {{#each movies}}
        <div class="col-md-2 movie-item">
          <div class="card">
            <img src="https://image.tmdb.org/t/p/original/{{poster_path}}" alt="{{title}}" class="card-img-top">
            <div class="card-body p-2">
              <h5 class="card-title ">{{title}}</h5>
              {{#ifInArray ../watchList title}}
              <button class="btn btn-primary btn-custom" disabled>Added to Watch List</button>
              {{else}}
              <button class="btn btn-primary add-to-watchlist btn-custom" data-title="{{title}}">Add to Watch List</button>
              {{/ifInArray}}
            </div>
          </div>
        </div>
        {{/each}}
      </div>
    </div>
  </div>
</div>
<!-- End of popular movies -->

  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script>
     const dropdownItems = document.getElementsByClassName('dropdown-item');
  Array.from(dropdownItems).forEach(item => {
    item.addEventListener('click', handleGenreSelection);
  });

  function handleGenreSelection(event) {
    const selectedGenre = event.target.value;
    const genreInput = document.getElementById('search-input-genre');
    genreInput.value = selectedGenre;
  }

  function displayMovies(movies) {
    const moviesContainer = document.getElementById('movies-container');
    moviesContainer.innerHTML = ''; // Clear previous search results

    if (movies.length > 0) {
      const ul = document.createElement('ul');

      movies.forEach(movie => {
        const liTitle = document.createElement('li');
        liTitle.textContent = movie.title;
        ul.appendChild(liTitle);

        const liReleaseDate = document.createElement('li');
        liReleaseDate.textContent = movie.release_date;
        ul.appendChild(liReleaseDate);

        const img = document.createElement('img');
        img.src = `https://image.tmdb.org/t/p/original/${movie.poster_path}`;
        img.alt = movie.title;
        img.width = 200;
        img.height = 300;
        ul.appendChild(img);
      });

      moviesContainer.appendChild(ul);
    } else {
      const p = document.createElement('p');
      p.textContent = 'No films found.';
      moviesContainer.appendChild(p);
    }
  }

  async function handleSearch(event) {
    event.preventDefault();
    const title = document.getElementById('search-input-title').value;
    const genre = document.getElementById('search-input-genre').value;
    const releaseDate = document.getElementById('search-input-release_date').value;

    let url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY_T}`;

    if (title) {
      const encodedTitle = encodeURIComponent(title);
      url += `&query=${encodedTitle}`;
    }if (genre) {
                fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY_T}`)
                    .then(response => response.json())
                    .then(data => {
                        const genres = data.genres;
                        const selectedGenre = genres.find(g => g.name.toLowerCase() === genre.toLowerCase());
                        if (selectedGenre) {
                            const genreId = selectedGenre.id;
                            url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY_T}&with_genres=${genreId}`;
                            if (releaseDate) {
                                const encodedReleaseDate = encodeURIComponent(releaseDate);
                                url += `&primary_release_date=${encodedReleaseDate}`;
                            }
                            fetchMovies(url);
                        } else {
                            console.error('Invalid genre');
                        }
                    })
                    .catch(error => {
                        console.error(error);
                    });
    
        if (releaseDate) {
          const encodedReleaseDate = encodeURIComponent(releaseDate);
          url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY_T}&primary_release_date=${encodedReleaseDate}`;
        }
    }
    const movies = await searchMovies(url);
    displayMovies(movies); // Render movies on the page
  

  const searchMovies = (url) => {
    return fetch(url)
      .then(response => response.json())
      .then(data => {
        const movies = data.results;
        console.log(movies);
        return movies;
      })
      .catch(error => {
        console.error(error);
        return [];
      });
  };
  document.addEventListener("DOMContentLoaded", function() {
    const addToWatchListButtons = document.querySelectorAll(".add-to-watchlist");

    addToWatchListButtons.forEach(function(button) {
      button.addEventListener("click", function(event) {
        const title = event.target.dataset.title;

        fetch("/movies/watchlist", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ title: title }),
        })
          .then(function(response) {
            if (response.ok) {
              event.target.disabled = true;
              event.target.textContent = "Added to Watch List";
            } else {
              console.error("Failed to add movie to watch list");
            }
          })
          .catch(function(error) {
            console.error(error);
          });
      });
    });
  });
</script>
</body>

</html>
